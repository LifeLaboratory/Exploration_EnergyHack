from base.base_sql import Sql


def update_network(data):
    sql_query = """
UPDATE "Сеть"
SET "Компания" = {Компания}, "Название" = '{Название}'
where id = {id}
    """
    Sql.exec(query=sql_query, args=data)


def update_rec(data):
    sql_query = """
UPDATE "РЭС"
SET "Сеть" = {Сеть}, "Название" = '{Название}', Название-примечание = '{Название-примечание}'
where id = {id}
    """
    Sql.exec(query=sql_query, args=data)


def update_lep(data):
    sql_query = """
UPDATE "ЛЭП"
SET "Сеть" = {Сеть}, 
"Название" = '{Название}', 
"Название-примечание" = '{Название-примечание}',
"Диспетчерское_наименование" = '{Диспетчерское_наименование}', 
"Напряжение" = {Напряжение},
"Техническое_состояние" = '{Техническое_состояние}',
"Номер_по_порядку" = {Номер_по_порядку},
"Напряжение-примечание" = '{Напряжение-примечание}',
"Техническое_состояние-примечание" = '{Техническое_состояние-примечание}',
"Номер_по_порядку-примечание" = '{Номер_по_порядку-примечание}'
where id = {id}
        """
    Sql.exec(query=sql_query, args=data)


def update_provod(data):
    sql_query = """
UPDATE "Провод"
SET "ЛЭП" = {ЛЭП}, 
"Марка" = '{Марка}', 
"Год_ввода" = '{Год_ввода}',
"Количество_цепей" = '{Количество_цепей}',
"Длина_по_трассе" = '{Длина_по_трассе}',
"Длина_по_цепям" = '{Длина_по_цепям}',
"Длина_участка_по_трассе" = '{Длина_участка_по_трассе}',
"Длина_участка_по_цепям" = '{Длина_участка_по_цепям}',
"Марка-примечание" = '{Марка-примечание}',
"Год_ввода-примечание" = '{Год_ввода-примечание}',
"Количество_цепей-примечание" = '{Количество_цепей-примечание}',
"Длина_по_трассе-примечание" = '{Длина_по_трассе-примечание}',
"Длина_по_цепям-примечание" = '{Длина_по_цепям-примечание}',
"Длина_участка_по_цепям-примечание" = '{Длина_участка_по_цепям-примечание}'
where id = {id}
        """
    Sql.exec(query=sql_query, args=data)


def update_pc(data):
    sql_query = """
UPDATE "Подстанция"
SET 
"Сеть" = {Сеть},
"Год_ввода" = '{Год_ввода}',
"Год_ввода-примечание" = '{Год_ввода-примечание}',
"Название" = '{Название}',
"Подстанционный_номер" = {Подстанционный_номер},
"Класс_напряжения" = '{Класс_напряжения}',
"РЭС" = {РЭС},
"Название-примечание" = '{Название-примечание}',
"Подстанционный_номер-примечание" = '{Подстанционный_номер-примечание}',
"Класс_напряжения-примечание" = '{Класс_напряжения-примечание}'
where id = {id}
        """
    Sql.exec(query=sql_query, args=data)


def update_trans(data):
    sql_query = """
UPDATE "Трансформатор"
SET 
"Подстанция" = {Подстанция},
"Год_изготовления" = '{Год_изготовления}',
"Год_включения" = '{Год_включения}',
"Тип" = '{Тип}',
"Номинальная_мощность" = '{Номинальная_мощность}',
"Техническое_состояние" = '{Техническое_состояние}',
"Номер" = '{Номер}',
"Год_изготовления-примечание" = '{Год_изготовления-примечание}',
"Год_включения-примечание" = '{Год_включения-примечание}',
"Тип-примечание" = '{Тип-примечание}',
"Номинальная_мощность-примечание" = '{Номинальная_мощность-примечание}',
"Техническое_состояние-примечание" = '{Техническое_состояние-примечание}',
"Номер-примечание" = '{Номер-примечание}'
where id = {id}
        """
    Sql.exec(query=sql_query, args=data)


def update_child(data):
    children = data.get('children')
    functons = {
        'РЭС': update_rec,
        'ЛЭП':  update_lep,
        'Провод': update_provod,
        'Подстанция': update_pc,
        'Трансформатор': update_trans
    }
    for child in children:
        type_row = child.get('Тип_записи')
        func = functons.get(type_row)
        try:
            func(child)
        except:
            pass
        if child.get('children'):
            update_child(child)


def update_data(list_data):
    for data in list_data:
        update_network(data)
        update_child(data)
